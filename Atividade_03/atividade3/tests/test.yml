"Leitura do Vetor (1.0)":
  command: "./bin/ex1.out"
  stdin: [
    ["1 2 3 4 5 6 7 8 9 10 -100"],
    ["333 200 13 -100"],
         ]
  prompts: ["(.*):"]
  stdout: [
    '[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]',
    '[333, 200, 13]'
          ]
  weight: 1
  hints: ['', '']

"Função Troca Elementos (1.0)":
  command: "./dll/ex1.so"
  function: void troca_elementos *c_int,c_int,c_int
  vartype: "*c_int"
  stdin: [
    [ [1, 2, 3, 4], 0, 1 ],
    [ [10, 40, 50, 60], 2, 0 ],
         ]
  stdout: [ [2, 1, 3, 4], [50, 40, 10, 60] ]
  weight: 1
  hints: ['', '', '']

"Função Particiona - Interação com o Vetor (2.0)":
  command: "./dll/ex1.so"
  function: c_int particiona *c_int,c_int,c_int
  vartype: "*c_int"
  stdin: [
    [ [10, 3, 40, 5], 0, 3 ],
    [ [5, 4, 3, 2, 1], 0, 4 ],
    [ [5, 4, 3, 2, 1], 2, 4 ],
    [ [7, 6, 5, 4, 3, 2, 1], 2, 2 ],
    [ [1, 2, 3], 0, 2 ],
         ]
  stdout: [
    [[3, 5, 40, 10]],
    [[1, 2, 3, 4, 5]],
    [[5, 4, 1, 2, 3]],
    [[7, 6, 5, 4, 3, 2, 1]],
    [[1, 2, 3]],
  ]
  weight: 2
  hints: ['', '', '','', '', '']

"Função Particiona - Retorno (1.0)":
  command: "./dll/ex1.so"
  function: c_int particiona *c_int,c_int,c_int
  stdin: [
    [ [10, 3, 40, 5], 0, 3 ],
    [ [4, 3, 2, 1], 0, 3 ],
    [ [4, 3, 2, 1], 3, 3 ],
    [ [7, 6, 5, 4, 3, 2, 1], 0, 1 ],
    [ [7, 6, 5, 4, 3, 2, 1], 0, 6 ],
         ]
  stdout: [
    0,
    2,
    3,
    1,
    3,
  ]
  weight: 1
  hints: ['', '', '','', '', '']

"Conjunto da Obra (3.0)":
  command: "./bin/ex1.out"
  stdin: [
    ["1 2 3 -100"],
    ["3 2 1 -100"],
    ["15 200 13 -100"],
         ]
  prompts: ["(.*):"]
  stdout: [
          ">> Quicksort(começo = 0, fim = 2). Vetor = [1, 2, 3]>> Quicksort(começo = 0, fim = 0). Vetor = [1, 2, 3]** Quicksort(começo = 0, fim = 0). Vetor = [1, 2, 3]>> Quicksort(começo = 2, fim = 2). Vetor = [1, 2, 3]** Quicksort(começo = 2, fim = 2). Vetor = [1, 2, 3]** Quicksort(começo = 0, fim = 2). Vetor = [1, 2, 3]",
          ">> Quicksort(começo = 0, fim = 2). Vetor = [3, 2, 1]>> Quicksort(começo = 0, fim = 0). Vetor = [1, 2, 3]** Quicksort(começo = 0, fim = 0). Vetor = [1, 2, 3]>> Quicksort(começo = 2, fim = 2). Vetor = [1, 2, 3]** Quicksort(começo = 2, fim = 2). Vetor = [1, 2, 3]** Quicksort(começo = 0, fim = 2). Vetor = [1, 2, 3]",
          ">> Quicksort(começo = 0, fim = 2). Vetor = [15, 200, 13]>> Quicksort(começo = 0, fim = 1). Vetor = [15, 13, 200]>> Quicksort(começo = 0, fim = 0). Vetor = [13, 15, 200]** Quicksort(começo = 0, fim = 0). Vetor = [13, 15, 200]>> Quicksort(começo = 2, fim = 1). Vetor = [13, 15, 200]** Quicksort(começo = 2, fim = 1). Vetor = [13, 15, 200]** Quicksort(começo = 0, fim = 1). Vetor = [13, 15, 200]>> Quicksort(começo = 3, fim = 2). Vetor = [13, 15, 200]** Quicksort(começo = 3, fim = 2). Vetor = [13, 15, 200]** Quicksort(começo = 0, fim = 2). Vetor = [13, 15, 200]",
            ]
  weight: 3
  hints: ['', '','', '']

"Função Quicksort (2.0)":
  command: "./dll/ex1.so"
  function: void quicksort *c_int,c_int,c_int,c_int
  vartype: "*c_int"
  stdin: [
    [ [5, 4, 3, 2, 1], 5, 0, 4 ],
    [ [5, 4, 3, 2, 1], 5, 2, 4 ],
    [ [1, 2, 3], 3, 0, 2 ],
         ]
  stdout: [
    [[1, 2, 3, 4, 5]],
    [[5, 4, 1, 2, 3]],
    [[1, 2, 3]],
  ]
  weight: 2
  hints: ['', '', '','', '', '']
